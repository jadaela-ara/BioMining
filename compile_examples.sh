#!/bin/bash

# üéØ Script de compilation s√©lective des exemples BioMining
# Compile uniquement les exemples qui sont corrig√©s et fonctionnels

set -e

echo "üéØ BioMining - Compilation S√©lective des Exemples"
echo "================================================="
echo ""

# V√©rifier si nous sommes dans le bon r√©pertoire
if [ ! -f "CMakeLists.txt" ]; then
    echo "‚ùå Erreur: Ex√©cutez ce script depuis le r√©pertoire racine du projet BioMining"
    exit 1
fi

# Aller dans le r√©pertoire build
if [ ! -d "build" ]; then
    echo "üìÅ Cr√©ation du r√©pertoire build..."
    mkdir build
fi

cd build

# Configuration CMake avec exemples activ√©s
echo "‚öôÔ∏è  Configuration CMake avec exemples..."
cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_TESTS=ON \
    -DBUILD_EXAMPLES=ON \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

echo ""
echo "üî® Compilation des exemples fonctionnels..."

# Liste des exemples qui compilent correctement
WORKING_EXAMPLES=(
    "example_mea_basic"
    "example_mining_basic" 
    "example_complete_workflow"
)

# Liste des exemples avec probl√®mes connus
BROKEN_EXAMPLES=(
    "example_custom_benchmark"
)

echo "‚úÖ Exemples √† compiler:"
for example in "${WORKING_EXAMPLES[@]}"; do
    echo "  - $example"
done

echo ""
echo "‚ö†Ô∏è  Exemples ignor√©s (n√©cessitent corrections):"
for example in "${BROKEN_EXAMPLES[@]}"; do
    echo "  - $example"
done

echo ""

# Compilation des exemples fonctionnels
SUCCESS_COUNT=0
TOTAL_COUNT=${#WORKING_EXAMPLES[@]}

for example in "${WORKING_EXAMPLES[@]}"; do
    echo "üî® Compilation de $example..."
    if make "$example" -j1; then
        echo "  ‚úÖ $example compil√© avec succ√®s"
        ((SUCCESS_COUNT++))
    else
        echo "  ‚ùå √âchec de compilation de $example"
    fi
    echo ""
done

echo "üìä R√©sum√© de Compilation"
echo "======================="
echo "Exemples r√©ussis : $SUCCESS_COUNT/$TOTAL_COUNT"

if [ -f "bin/example_mea_basic" ]; then
    echo "  ‚úÖ example_mea_basic ($(ls -lh bin/example_mea_basic | awk '{print $5}'))"
fi

if [ -f "bin/example_mining_basic" ]; then
    echo "  ‚úÖ example_mining_basic ($(ls -lh bin/example_mining_basic | awk '{print $5}'))"
fi

if [ -f "bin/example_complete_workflow" ]; then
    echo "  ‚úÖ example_complete_workflow ($(ls -lh bin/example_complete_workflow | awk '{print $5}'))"
fi

echo ""
echo "üöÄ Pour tester les exemples compil√©s:"
echo "  ./bin/example_mea_basic"
echo "  ./bin/example_mining_basic"  
echo "  ./bin/example_complete_workflow"
echo ""

if [ $SUCCESS_COUNT -eq $TOTAL_COUNT ]; then
    echo "üéâ Tous les exemples fonctionnels ont √©t√© compil√©s avec succ√®s!"
    exit 0
else
    echo "‚ö†Ô∏è  $((TOTAL_COUNT - SUCCESS_COUNT)) exemple(s) ont √©chou√©"
    exit 1
fi